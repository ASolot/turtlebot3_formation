<!-- 
    1. call multi_tur_slam.launch(call gmapping)
    2. call slam.launch to detect obstacles
    3. call multirobot_map_merge to merge map
 -->
<launch>

  <!-- Start slam -->
  <!-- start gmapping -->
  <include file="$(find turtlebot3_gazebo)/launch/multi_turtlebot3_slam.launch">
    <arg name="ns" value="tb3_0"/>
  </include>
  
  <include file="$(find turtlebot3_gazebo)/launch/multi_turtlebot3_slam.launch">
    <arg name="ns" value="tb3_1"/>
  </include>
  
  <include file="$(find turtlebot3_gazebo)/launch/multi_turtlebot3_slam.launch">
    <arg name="ns" value="tb3_2"/>
  </include>


  <!-- Merge maps -->
  <!-- <include file="$(find turtlebot3_gazebo)/launch/multi_map_merge.launch">
    <param name="known_init_poses" value="false"/>
  </include> -->
  <arg name="first_tb3"  default="tb3_0"/>
  <arg name="second_tb3" default="tb3_1"/>
  <arg name="third_tb3"  default="tb3_2"/>

  <group ns="$(arg first_tb3)">
    <include file="$(find turtlebot3_formation)/ros/launch/slam.launch">
      <arg name="namespace" value="$(arg first_tb3)"/>
    </include>
  </group>

  <group ns="$(arg second_tb3)">
    <include file="$(find turtlebot3_formation)/ros/launch/slam.launch">
      <arg name="namespace" value="$(arg second_tb3)"/>
    </include>
  </group>
  
  <group ns="$(arg third_tb3)">
    <include file="$(find turtlebot3_formation)/ros/launch/slam.launch">
      <arg name="namespace" value="$(arg third_tb3)"/>
    </include>
  </group>

  <arg name="first_tb3_x_pos" default="-7.0"/>
  <arg name="first_tb3_y_pos" default="-1.0"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/>

  <arg name="second_tb3_x_pos" default=" 7.0"/>
  <arg name="second_tb3_y_pos" default="-1.0"/>
  <arg name="second_tb3_z_pos" default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 0.0"/>

  <arg name="third_tb3_x_pos" default=" 0.5"/>
  <arg name="third_tb3_y_pos" default=" 3.0"/>
  <arg name="third_tb3_z_pos" default=" 0.0"/>
  <arg name="third_tb3_yaw"   default=" 0.0"/>

  <group ns="$(arg first_tb3)/map_merge">
    <param name="init_pose_x"   value="$(arg first_tb3_x_pos)"/>
    <param name="init_pose_y"   value="$(arg first_tb3_y_pos)"/>
    <param name="init_pose_z"   value="$(arg first_tb3_z_pos)"/>
    <param name="init_pose_yaw" value="$(arg first_tb3_yaw)"  />
  </group>

  <group ns="$(arg second_tb3)/map_merge">
    <param name="init_pose_x"   value="$(arg second_tb3_x_pos)"/>
    <param name="init_pose_y"   value="$(arg second_tb3_y_pos)"/>
    <param name="init_pose_z"   value="$(arg second_tb3_z_pos)"/>
    <param name="init_pose_yaw" value="$(arg second_tb3_yaw)"  />
  </group>

  <group ns="$(arg third_tb3)/map_merge">
    <param name="init_pose_x"   value="$(arg third_tb3_x_pos)"/>
    <param name="init_pose_y"   value="$(arg third_tb3_y_pos)"/>
    <param name="init_pose_z"   value="$(arg third_tb3_z_pos)"/>
    <param name="init_pose_yaw" value="$(arg third_tb3_yaw)"  />
  </group>

  <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge" output="screen">
    <param name="robot_map_topic" value="map"/>
    <param name="robot_namespace" value="tb3"/>
    <param name="merged_map_topic" value="map"/>
    <param name="world_frame" value="map"/>
    <param name="known_init_poses" value="false"/>
    <param name="merging_rate" value="0.5"/>
    <param name="discovery_rate" value="0.05"/>
    <param name="estimation_rate" value="0.1"/>
    <param name="estimation_confidence" value="1.0"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg first_tb3)/map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg second_tb3)/map 100"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg third_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg third_tb3)/map 100"/>

  <!-- 
       Default -Open rViz config to true for local rviz client. 
       Allows override to disable it for RoboMaker. See hello_world_aws.launch. 
  -->
  <arg name="open_rviz_config" default="true"/>
  <group if="$(arg open_rviz_config)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_formation)/ros/rviz/turtlebot3_formation_slam.rviz"/>
  </group>

</launch>
